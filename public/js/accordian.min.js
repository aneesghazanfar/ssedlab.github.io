// if (document.querySelector(".accordion") !== null) {
// 	const acc = document.getElementsByClassName("accordion");

// 	openFirstAccTab();

// 	// Here the accordion can close all tabs
// 	for (let i = 0; i < acc.length; i++) {
// 		acc[i].addEventListener("click", function () {
// 			if (!this.classList.contains("active")) {
// 				closeAccTabs();
// 				toggleAcc(this);
// 				console.log("Non Active");
// 			} else {
// 				closeAccTabs();
// 				console.log("Active");
// 			}
// 		});
// 	}

// 	If you want one block in accordion to be always open
// 	for (let i = 0; i < acc.length; i++) {
// 		acc[i].addEventListener("click", function () {
// 			closeAccTabs();
// 			toggleAcc(this);
// 		});
// 	}

// 	// Open/close tab
// 	function toggleAcc(e) {
// 		e.classList.toggle("active");
// 		var panel = e.nextElementSibling;
// 		if (panel.style.maxHeight) {
// 			panel.style.maxHeight = null;
// 		} else {
// 			panel.style.maxHeight = panel.scrollHeight + "px";
// 		}
// 	}

// 	// Closing an open accordion tab when clicking on another one (if needed)
// 	function closeAccTabs() {
// 		for (let i = 0; i < acc.length; i++) {
// 			if (acc[i].classList.contains("active")) {
// 				acc[i].classList.remove("active");
// 				acc[i].nextElementSibling.removeAttribute("style");
// 			}
// 		}
// 	}

// 	// Open first accordion tab by default
// 	function openFirstAccTab() {
// 		if (!acc[0].classList.contains("active")) {
// 			acc[0].classList.add("active");
// 			acc[0].nextElementSibling.style.maxHeight =
// 				acc[0].nextElementSibling.scrollHeight + "px";
// 		}
// 	}

// 	// When resizing - auto-height adjustment
// 	window.addEventListener(
// 		"resize",
// 		function () {
// 			for (let i = 0; i < acc.length; i++) {
// 				if (acc[i].classList.contains("active")) {
// 					acc[i].nextElementSibling.style.maxHeight =
// 						acc[i].nextElementSibling.scrollHeight + "px";
// 				}
// 			}
// 		},
// 		true
// 	);
// }



if (document.querySelector(".accordion") !== null) {
	const acc = document.getElementsByClassName("accordion");

	openFirstAccTab();

	// Here the accordion can close all tabs
	for (let i = 0; i < acc.length; i++) {
		acc[i].addEventListener("click", function () {
			if (!this.classList.contains("active")) {
				closeAccTabs();
				toggleAcc(this);
				console.log("Non Active");
			} else {
				closeAccTabs();
				console.log("Active");
			}
		});
	}

	// If you want one block in accordion to be always open
	// for (let i = 0; i < acc.length; i++) {
	// 	acc[i].addEventListener("click", function () {
	// 		closeAccTabs();
	// 		toggleAcc(this);
	// 	});
	// }

	// Open/close tab
	function toggleAcc(e) {
		e.classList.toggle("active");
		var panel = e.nextElementSibling;
		if (panel.style.maxHeight) {
			panel.style.maxHeight = null;
		} else {
			panel.style.maxHeight = panel.scrollHeight + "px";
		}
	}

	// Closing an open accordion tab when clicking on another one (if needed)
	function closeAccTabs() {
		for (let i = 0; i < acc.length; i++) {
			if (acc[i].classList.contains("active")) {
				acc[i].classList.remove("active");
				acc[i].nextElementSibling.removeAttribute("style");
			}
		}
	}

	// Open first accordion tab by default
	function openFirstAccTab() {
		if (!acc[0].classList.contains("active")) {
			acc[0].classList.add("active");
			acc[0].nextElementSibling.style.maxHeight =
				acc[0].nextElementSibling.scrollHeight + "px";
		}
	}

	// When resizing - auto-height adjustment
	window.addEventListener(
		"resize",
		function () {
			for (let i = 0; i < acc.length; i++) {
				if (acc[i].classList.contains("active")) {
					acc[i].nextElementSibling.style.maxHeight =
						acc[i].nextElementSibling.scrollHeight + "px";
				}
			}
		},
		true
	);
}

// Slider

const swiper = new Swiper(".swiper-slider", {
  // Optional parameters
  centeredSlides: true,
  slidesPerView: 1,
  grabCursor: true,
  freeMode: false,
  loop: true,
  mousewheel: false,
  keyboard: {
    enabled: true
  },

  // Enabled autoplay mode
  autoplay: {
    delay: 3000,
    disableOnInteraction: false
  },

  // If we need pagination
  // pagination: {
  //   el: ".swiper-pagination",
  //   dynamicBullets: false,
  //   clickable: true
  // },

  // If we need navigation
  navigation: {
    nextEl: ".swiper-button-next",
    prevEl: ".swiper-button-prev"
  },

  // Responsive breakpoints
  breakpoints: {
    640: {
      slidesPerView: 1.25,
      spaceBetween: 20
    },
    1024: {
      slidesPerView: 4,
      spaceBetween: 20
    }
  }
});
